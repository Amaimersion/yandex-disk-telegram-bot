# Based on this file you can create your own
# `.env.development` or `.env.production`.
# Next will be described expected environment variables.
# In final file you also can put any arbitrary environment variables
# (for example, specific for Docker containers, app configuration,
# external software configuration, etc.).
# If some env variable shouldn't be presented, then just delete it.
# "If you use docker image" means that you are using Docker locally,
# through "docker" or "docker-compose".


### Required

# Single secret key.
# Don't lose it, otherwise you will be not able to
# interact with existing database.
# You must generate it as follows in order
# to use `cryptography` package:
# ```
# python manage.py generate-secret-key
# ```
FLASK_SECRET_KEY=

# Address of database.
# PostgreSQL is expected in production, but not required.
# For local SQLite you can specify a path. For example,
# `sqlite:///development.sqlite` will put `development.sqlite`
# in `src` folder (because relative to the app).
DATABASE_URL=postgresql+psycopg2://<user>:<password>@<host>:<port>/<db_name>

# API token received from @BotFather for Telegram bot.
TELEGRAM_API_BOT_TOKEN=

# ID of app registerd in Yandex to access Yandex OAuth API.
YANDEX_OAUTH_API_APP_ID=

# Password of app registerd in Yandex to access Yandex OAuth API.
YANDEX_OAUTH_API_APP_PASSWORD=

###


### Required if you use Postgres docker image

# Name of user that will own DB.
# Use this value in `DATABASE_URL`.
POSTGRES_USER=

# Password of user that will own DB.
# Use this value in `DATABASE_URL`.
POSTGRES_PASSWORD=

# Name of DB that will store data.
# Use this value in `DATABASE_URL`.
POSTGRES_DB=

###


### Required if you use amaimersion/yd-tg-bot-rq docker image

# Number of RQ workers that will handle background tasks.
# Each worker can perform one task at a time.
# Read RQ documentation to set appropriate value.
# Keep in mind that each worker instance creates its own fork,
# which means significant usage of your computer resources.
# So, monitor usage of your computer resources.
# Start with 2 or 3 if you don't sure what you need.
RQ_WORKERS=

###


### Optional

# Add postfix to final URL of Telegram webhook route.
# For example, initially app uses `/webhook` URL.
# You can set this variable to `_aslv123`.
# And the app will use this URL `/webhook_aslv123`.
TELEGRAM_API_WEBHOOK_URL_POSTFIX=

# Address of Redis server.
# If address will be specified, then the app will assume
# that valid instance of Redis server is running, and the app
# will not make any checks (like `PING`). So, make sure you
# pointing to valid Redis instance.
# If you want to point to Docker container that is placed
# in the same network as the app container, then you should
# use container DNS name. For example, `redis://redis-container:6379`.
REDIS_URL=

# Number of gunicorn workers.
# Read gunicorn documentation to set appropriate value.
# Use "-1" for "auto".
# Keep in mind that each worker instance creates its own fork,
# which means significant usage of your computer resources.
# So, monitor usage of your computer resources.
# Most likely you don't need high values.
# Start with 1 or 2.
GUNICORN_WORKERS=

# Number of connections for each gunicorn worker.
# Read gunicorn documentation to set appropriate value.
GUNICORN_WORKER_CONNECTIONS=

# Your UA for Google Analytics.
# Google Analytics is used in some app components to collect
# and analyze usage info.
GOOGLE_ANALYTICS_UA=UA-XXXX-X

###
